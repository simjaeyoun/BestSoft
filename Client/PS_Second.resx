<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="smallMap.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>